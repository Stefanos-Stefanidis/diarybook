/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.PersonalGoalController;
import controller.PersonalGoalImageController;
import controller.PersonalGoalTextController;
import dao.CheckIfFileExistsDao;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import dao.PersonalGoalDao;
import dao.PersonalGoalTxtDao;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Login;
import validators.LocationValidator;
import validators.TitleValidator;
import validators.WhenDateValidator;
import validators.WithPersonValidator;
import validators.*;


/*
 ** Μια φόρμα που υλοποιή το μοντέλου του Προσωπικού στόχου (Personal Goal)
 *@author alex
 */
public class PersonalGoalForm extends javax.swing.JFrame implements IPersonalGoalForm {

    private PersonalGoalController PersonalGoalController;
    private BufferedImage dialogImage;
    private PersonalGoalDao db;
   
    public boolean ifImageExist = false;
  
    /**
     * Creates new form PersonalGoalForm
     */
    public PersonalGoalForm() {
        initComponents();
        this.setLocationRelativeTo(null);
       
    }

    public PersonalGoalForm(String txt) {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    /**
     * function for displayImage
     * @param fileName 
     */
    public void displayImage(String fileName){
        File file = new File(fileName);
        BufferedImage img = null;
        try {
            img = ImageIO.read(file);
        } catch (IOException ex) {
            Logger.getLogger(PersonalGoalForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        int w = imageLabel.getWidth();
        int h = imageLabel.getHeight();

        int type = img.getType() == 0 ? BufferedImage.TYPE_INT_ARGB : img.getType();

        BufferedImage resizedImg = new BufferedImage(w, h, type);
        Graphics g = resizedImg.createGraphics();
        g.drawImage(img, 0, 0, w, h, null);
        g.dispose();
        imageLabel.setIcon(new ImageIcon(resizedImg));
        boolean ifImageExist =true;
        
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        withPersonLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        locationTextField = new javax.swing.JTextField();
        withPersonTextField = new javax.swing.JTextField();
        WhenDate = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        announcementEditorPane = new javax.swing.JEditorPane();
        AnnouncementLabel = new javax.swing.JLabel();
        whenDateSpinner = new javax.swing.JSpinner();
        addNewFotoLabel = new javax.swing.JLabel();
        browseFotoFile = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        browseFotoTextField = new javax.swing.JTextField();
        buttonUploadFoto = new javax.swing.JButton();
        checkFieldTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setForeground(java.awt.Color.orange);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        jLabel1.setText("New Personal Goal");

        titleLabel.setText("Title:");

        locationLabel.setText("Location:");

        withPersonLabel.setText("With Person:");

        titleTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                titleTextFieldFocusLost(evt);
            }
        });

        locationTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                locationTextFieldFocusLost(evt);
            }
        });

        withPersonTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                withPersonTextFieldFocusLost(evt);
            }
        });

        WhenDate.setText("WhenDate");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        announcementEditorPane.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                announcementEditorPaneFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(announcementEditorPane);

        AnnouncementLabel.setText("Announcement");

        whenDateSpinner.setModel(new javax.swing.SpinnerDateModel());
        whenDateSpinner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        whenDateSpinner.setEditor(new javax.swing.JSpinner.DateEditor(whenDateSpinner, "dd/MM/yyyy"));
        whenDateSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                whenDateSpinnerFocusLost(evt);
            }
        });

        addNewFotoLabel.setText("     UPLOAD YOUR FOTO");
        addNewFotoLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        browseFotoFile.setText("Browse..");
        browseFotoFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFotoFileActionPerformed(evt);
            }
        });

        imageLabel.setToolTipText("");
        imageLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        browseFotoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFotoTextFieldActionPerformed(evt);
            }
        });

        buttonUploadFoto.setText("Upload");
        buttonUploadFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUploadFotoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(checkFieldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(locationLabel)
                            .addComponent(withPersonLabel)
                            .addComponent(titleLabel)
                            .addComponent(WhenDate)
                            .addComponent(AnnouncementLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelButton))
                            .addComponent(whenDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(locationTextField)
                            .addComponent(titleTextField)
                            .addComponent(withPersonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(browseFotoTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(browseFotoFile)
                                        .addGap(64, 64, 64)
                                        .addComponent(buttonUploadFoto))
                                    .addComponent(addNewFotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 22, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addNewFotoLabel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(browseFotoFile)
                            .addComponent(buttonUploadFoto))
                        .addGap(18, 18, 18)
                        .addComponent(browseFotoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titleLabel)
                            .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(locationLabel)
                            .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(withPersonLabel)
                            .addComponent(withPersonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(WhenDate)
                            .addComponent(whenDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnnouncementLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveButton)
                            .addComponent(cancelButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkFieldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * cancelButton για να γίνει close η φόρμα.
     *
     * @param evt
     */
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * saveButton για να γίνεται τυχόν έλενχος πεδίον και το τελικό save.
     *
     * @param evt
     */
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String title = titleTextField.getText();
        String location = locationTextField.getText();
        String withPerson = withPersonTextField.getText();
        String whenDate = whenDateSpinner.getValue().toString();
        String announcement = announcementEditorPane.getText();

        PersonalGoalController newController = new PersonalGoalController();
        PersonalGoalImageController newImageController = new PersonalGoalImageController();
        //check if all Field is correct and return if is all ok success or tha name the wrong value.

        Boolean success = false;
        String allFieldSuccess = "wrong";
        CheckIfFileExistsDao PersonalGoal = new CheckIfFileExistsDao();
        if (PersonalGoal.filePathExistsPersonalGoal(titleTextField.getText())) {

            checkFieldTextField.setBackground(Color.red);
            checkFieldTextField.setText(" File exist! rename the title");
        } else {

            allFieldSuccess = newController.createPersonalGoal(titleTextField.getText(), locationTextField.getText(), withPersonTextField.getText(), whenDateSpinner.getValue().toString(), announcementEditorPane.getText());

            if ("success".equals(allFieldSuccess)) {

                PersonalGoalTextController newTextController = new PersonalGoalTextController();
                PersonalGoalTxtDao newTxtDao = new PersonalGoalTxtDao();
                Login lgn = new Login();
                String userName = lgn.getUsername();
                boolean Success = newTextController.createTextFile(titleTextField.getText(), locationTextField.getText(), withPersonTextField.getText(), whenDateSpinner.getValue().toString(), announcementEditorPane.getText(), userName);
                newImageController.saveImage(titleTextField.getText(), browseFotoTextField.getText(), userName);

                if (Success) {
                    checkFieldTextField.setText("success");
                    checkFieldTextField.setBackground(Color.green);
                }
                else {

                checkFieldTextField.setText(allFieldSuccess + " is incorect!");
                checkFieldTextField.setBackground(Color.red);

            }
        }
    }
    }//GEN-LAST:event_saveButtonActionPerformed

   
    /**
     *
     * @param fileDescription
     * @param fileSuffixes
     * @param dialog
     * @return
     */
    private File getFile(String fileDescription, String[] fileSuffixes, String dialog) {
        JFileChooser f = new JFileChooser();
        f.setFileFilter(new FileNameExtensionFilter(fileDescription, fileSuffixes));
        f.setAcceptAllFileFilterUsed(false);
        if (f.showDialog(this, dialog) == JFileChooser.CANCEL_OPTION) {
            return null;
        } else {
            return f.getSelectedFile();
        }
    }
    
    /**
     *
     * @param evt
     */
    private void browseFotoFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFotoFileActionPerformed
        
        File file = getFile("Image", ImageIO.getReaderFileSuffixes(), "Select");

        if (file != null) {
            browseFotoTextField.setText(file.getAbsolutePath());
            browseFotoTextField.setEnabled(false);
            
        }

    }//GEN-LAST:event_browseFotoFileActionPerformed
    /**
     *
     * @param evt
     */
    private void browseFotoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFotoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_browseFotoTextFieldActionPerformed

    
    /**
     * buttonUpload για να εμφανίζεται η εικόνα μέσα στην φόρμα.
     *
     * @param evt
     */
    private void buttonUploadFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUploadFotoActionPerformed
        
       
        String fileName = browseFotoTextField.getText();
        displayImage(fileName);
       
        
       
       


    }//GEN-LAST:event_buttonUploadFotoActionPerformed

    private void titleTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_titleTextFieldFocusLost
        TitleValidator newTitle = new TitleValidator();
        boolean isValid = newTitle.titleIsValid(titleTextField.getText());
        saveButton.setEnabled(isValid);
        if (!isValid) {

            titleTextField.setForeground(Color.red);
        } else {

            titleTextField.setForeground(Color.black);
        }
    }//GEN-LAST:event_titleTextFieldFocusLost

    private void locationTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationTextFieldFocusLost
        LocationValidator newLocation = new LocationValidator();
        boolean isValid = newLocation.locationIsValid(locationTextField.getText());
        if (!isValid) {

            locationTextField.setForeground(Color.red);
        } else {

            locationTextField.setForeground(Color.black);
        }
    }//GEN-LAST:event_locationTextFieldFocusLost

    private void withPersonTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_withPersonTextFieldFocusLost
        WithPersonValidator withPerson = new WithPersonValidator();
        boolean isValid = withPerson.withPersonIsValid(withPersonTextField.getText());
        if (!isValid) {

            withPersonTextField.setForeground(Color.red);
        } else {

            withPersonTextField.setForeground(Color.black);
        }
    }//GEN-LAST:event_withPersonTextFieldFocusLost

    private void whenDateSpinnerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_whenDateSpinnerFocusLost
        WhenDateValidator whenDate = new WhenDateValidator();
        boolean isValid = whenDate.whenDateIsValid(whenDateSpinner.getName().toString());
        if (!isValid) {

            locationTextField.setForeground(Color.red);
        } else {

            locationTextField.setForeground(Color.black);
        }
    }//GEN-LAST:event_whenDateSpinnerFocusLost

    private void announcementEditorPaneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_announcementEditorPaneFocusLost
        AnnouncementValidator announcement = new AnnouncementValidator();
        boolean isValid = announcement.announcementIsValid(announcementEditorPane.getText());
        if (!isValid) {

            withPersonTextField.setForeground(Color.red);
        } else {

            withPersonTextField.setForeground(Color.black);
        }
    }//GEN-LAST:event_announcementEditorPaneFocusLost
    
    // displayErrorMessage εαν υπάρχει κάποιο λάθος.
    @Override
    public void displayErrorMessage(String errorMessage) {
        JOptionPane.showMessageDialog(this, errorMessage);
    }

    @Override
    public void displaySuccessMessage(String successMessage) {
        JOptionPane.showMessageDialog(this, successMessage);
    }

   

    /**
     * @param args the command line arguments
     * @throws java.io.UnsupportedEncodingException
     */
    public static void main(String args[]) throws UnsupportedEncodingException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(PersonalGoalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch(InstantiationException ex){
               
        }catch(IllegalAccessException x){
                        
        }
        catch(javax.swing.UnsupportedLookAndFeelException ex){
            
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PersonalGoalForm().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnnouncementLabel;
    private javax.swing.JLabel WhenDate;
    private javax.swing.JLabel addNewFotoLabel;
    private javax.swing.JEditorPane announcementEditorPane;
    private javax.swing.JButton browseFotoFile;
    private javax.swing.JTextField browseFotoTextField;
    private javax.swing.JButton buttonUploadFoto;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField checkFieldTextField;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JSpinner whenDateSpinner;
    private javax.swing.JLabel withPersonLabel;
    private javax.swing.JTextField withPersonTextField;
    // End of variables declaration//GEN-END:variables

}
